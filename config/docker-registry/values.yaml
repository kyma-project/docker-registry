# Values for docker-registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

registryNodePort: 32137
containerRegistry:
  path: europe-docker.pkg.dev/kyma-project
images:
  registry:
    name: "registry"
    version: "2.8.3-v1"
    directory: "prod/external/library"
  registry_init:
    name: "registry-init"
    version: "v20240506-57d31b1d"
    directory: "prod"
dockerregistryPriorityClassValue: 2000000
dockerregistryPriorityClassName: "dockerregistry-priority"

dockerRegistry:
  username: "{{ randAlphaNum 20 | b64enc }}" # for gcr "_json_key"
  password: "{{ randAlphaNum 40 | b64enc }}" # for gcr data from json key
  #  This is the registry address, for dockerhub it's username, for other it's url.
  registryAddress: ""
  #  This is the server address of the registry which will be used to create docker configuration.
  serverAddress: ""
replicaCount: 1

updateStrategy:
  type: Recreate
  rollingUpdate: null
  #   maxSurge: 1
  #   maxUnavailable: 0

image:
  pullPolicy: IfNotPresent
# imagePullSecrets:
# - name: docker
service:
  name: registry
  port: "5000" # same as configData.http.addr
  annotations: {}
virtualService:
  enabled: false
  host: "registry.cluster.local"
  gateway: "kyma-system/kyma-gateway"
ingress:
  enabled: false
  path: /
  # Used to create an Ingress record.
  hosts:
    - chart-example.local
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 400m
    memory: 800Mi
  requests:
    cpu: 10m
    memory: 300Mi

podAnnotations:
  sidecar.istio.io/inject: "false"
podLabels: {}

persistence:
  accessMode: "ReadWriteOnce"
  enabled: true
  size: 20Gi
  # storageClass: '-'
  # existingClaim: ""

# set the type of filesystem to use: filesystem, s3.
# If filesystem is used, you should also add it to configData, below
storage: filesystem

# Set this to name of secret for tls certs
# tlsSecretName: registry.docker.example.com

# Secrets for Azure
#   azure:
#     accountName: ""
#     accountKey: ""
#     container: ""
# Secrets for S3 access and secret keys
#   s3:
#     accessKey: ""
#     secretKey: ""
# Secrets for Google Cloud
#   gcs:
#     accountkey: ""

# Secrets for Swift username and password
#   swift:
#     username: ""
#     password: ""

# Options for s3 storage type:
# s3:
#  region: us-east-1
#  regionEndpoint: s3.us-east-1.amazonaws.com
#  bucket: my-bucket
#  encrypt: false
#  secure: true

# Options for swift storage type:
# swift:
#  authurl: http://swift.example.com/
#  container: my-container

# gcs:
#  bucket: ""
#  rootdirectory: ""
#  chunkSize: 5242880

# https://docs.docker.com/registry/configuration/
configData: # example: https://github.com/docker/distribution/blob/master/cmd/registry/config-dev.yml
  version: 0.1
  log:
    formatter: json
    fields:
      service: registry
  storage:
    cache:
      blobdescriptor: inmemory
  http:
    addr: :5000 # same as .Values.service.port
    headers:
      X-Content-Type-Options: [nosniff]
    debug:
      addr: :5001
      prometheus:
        enabled: true
        path: /metrics
  health:
    storagedriver:
      enabled: true
      interval: 10s
      threshold: 3

containers:
  # the following guidelines should be followed for this https://github.com/kyma-project/community/tree/main/concepts/psp-replacement
  securityContext:
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    procMount: default # Optional. The default is false if the entry is not there.
    readOnlyRootFilesystem: true # Mandatory

initContainers:
  # the following guidelines should be followed for this https://github.com/kyma-project/community/tree/main/concepts/psp-replacement
  securityContext:
    # this is required to allow the initContainer to chmod the volumemount for the registry storage volume. This is incompatible with the security requirements above and should be fixed in the future.
    runAsUser: 0
    runAsGroup: 0
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
      add: ["CHOWN"]
    procMount: default # Optional. The default is false if the entry is not there.
    readOnlyRootFilesystem: true # Mandatory

pod:
  # the following guidelines should be followed for this https://github.com/kyma-project/community/tree/main/concepts/psp-replacement
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    seccompProfile: # Optional. This option can also be set on container level but it is recommended to set it on Pod level and leave it undefined on container level.
      type: RuntimeDefault

podDisruptionBudget:
  {}
  # maxUnavailable: 1
  # minAvailable: 2

nodeSelector: {}

tolerations: []

secrets:
  haSharedSecret: "secret"
  htpasswd: "generated-in-init-container"

extraVolumeMounts:
  - name: htpasswd-data
    mountPath: /data

extraVolumes:
  - name: registry-credentials
    secret:
      secretName: dockerregistry-config
      items:
        - key: username
          path: username.txt
        - key: password
          path: password.txt
  - name: htpasswd-data
    emptyDir: {}
nameOverride:
fullnameOverride: "dockerregistry"

destinationRule:
  enabled: true

rollme: "{{ randAlphaNum 5}}"
registryHTTPSecret: "{{ randAlphaNum 16 | b64enc }}"
