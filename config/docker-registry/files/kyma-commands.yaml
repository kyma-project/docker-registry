metadata:
  name: registry
  description: A set of commands for the Kyma registry
  descriptionLong: Use this command to manage resources related to the Kyma registry.

subCommands:
- metadata:
    name: "config-external [flags]"
    description: "Saves Kyma registry external dockerconfig"
    descriptionLong: "Use this command to save Kyma registry external dockerconfig."
  uses: registry_config
  flags:
  - type: bool
    name: "push-reg-addr"
    description: "Get external registry push address only"
    default: "false"
  - type: bool
    name: "pull-reg-addr"
    description: "Get external registry address used to pull images"
    default: "false"
  - type: string
    name: "output"
    description: "Path where the output file should be saved to. NOTE: docker expects the file to be named 'config.json'"
  with:
    pushRegAddrOnly: ${{  .flags.pushregaddr.value }}
    pullRegAddrOnly: ${{  .flags.pullregaddr.value }}
    output: ${{  .flags.output.value }}
    useExternal: true

- metadata:
    name: "config-internal [flags]"
    description: "Saves Kyma registry internal dockerconfig"
    descriptionLong: "Use this command to save Kyma registry internal dockerconfig."
  uses: registry_config
  flags:
  - type: bool
    name: "push-reg-addr"
    description: "Get in-cluster registry address only"
    default: "false"
  - type: bool
    name: "pull-reg-addr"
    description: "Get in-cluster registry address used to pull images by Kubernetes only"
    default: "false"
  - type: string
    name: "output"
    description: "Path where the output file should be saved to. NOTE: docker expects the file to be named 'config.json'"
  with:
    pushRegAddrOnly: ${{  .flags.pushregaddr.value }}
    pullRegAddrOnly: ${{  .flags.pullregaddr.value }}
    output: ${{  .flags.output.value }}
    useExternal: false

- metadata:
    name: "image-import <image> [flags]"
    description: "Import image to in-cluster registry"
    descriptionLong: "Import image from daemon to in-cluster registry."
  uses: registry_image_import
  args:
    type: string
  with:
    image: ${{ .args.value}}
