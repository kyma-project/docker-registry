---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: dockerregistries.operator.kyma-project.io
spec:
  group: operator.kyma-project.io
  names:
    kind: DockerRegistry
    listKind: DockerRegistryList
    plural: dockerregistries
    singular: dockerregistry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Configured')].status
      name: Configured
      type: string
    - jsonPath: .status.conditions[?(@.type=='Installed')].status
      name: Installed
      type: string
    - jsonPath: .metadata.generation
      name: generation
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    - jsonPath: .status.state
      name: state
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DockerRegistry is the Schema for the dockerregistry API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DockerRegistrySpec defines the desired state of DockerRegistry
            properties:
              externalAccess:
                description: ExternalAccess defines the external access configuration.
                properties:
                  enabled:
                    description: |-
                      Enable indicates whether the external access is enabled.
                      default: false
                    type: boolean
                  hostPrefix:
                    description: |-
                      HostPrefix is the prefix for the host.
                      default: registry-<cr_name>.<cr_namespace>
                    type: string
                type: object
              storage:
                description: Storage defines the storage configuration ( filesystem
                  / s3 / azure / gcs / btpObjectStore ).
                properties:
                  azure:
                    properties:
                      secretName:
                        type: string
                    required:
                    - secretName
                    type: object
                  btpObjectStore:
                    properties:
                      secretName:
                        type: string
                    type: object
                  gcs:
                    properties:
                      bucket:
                        type: string
                      chunksize:
                        type: integer
                      rootdirectory:
                        type: string
                      secretName:
                        type: string
                    required:
                    - bucket
                    type: object
                  pvc:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  s3:
                    properties:
                      bucket:
                        type: string
                      encrypt:
                        type: boolean
                      region:
                        type: string
                      regionEndpoint:
                        type: string
                      secretName:
                        type: string
                      secure:
                        type: boolean
                    required:
                    - bucket
                    - region
                    type: object
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions associated with CustomStatus.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              externalAccess:
                description: ExternalAccess contains the external access configuration
                  of the DockerRegistry.
                properties:
                  enabled:
                    description: Enabled indicates whether the network access is enabled.
                    type: string
                  pullAddress:
                    description: PullAddress contains address kubernetes can use to
                      pull images from the registry.
                    type: string
                  pushAddress:
                    description: PushAddress contains an address that can be used
                      to push images to the registry from inside the cluster.
                    type: string
                  secretName:
                    description: SecretName is the name of the Secret containing the
                      addresses and auth methods.
                    type: string
                type: object
              internalAccess:
                description: InternalAccess contains the in-cluster access configuration
                  of the DockerRegistry.
                properties:
                  enabled:
                    description: Enabled indicates whether the network access is enabled.
                    type: string
                  pullAddress:
                    description: PullAddress contains address kubernetes can use to
                      pull images from the registry.
                    type: string
                  pushAddress:
                    description: PushAddress contains an address that can be used
                      to push images to the registry from inside the cluster.
                    type: string
                  secretName:
                    description: SecretName is the name of the Secret containing the
                      addresses and auth methods.
                    type: string
                type: object
              served:
                description: |-
                  Served signifies that current DockerRegistry is managed.
                  Value can be one of ("True", "False").
                enum:
                - "True"
                - "False"
                type: string
              state:
                description: |-
                  State signifies current state of DockerRegistry.
                  Value can be one of ("Ready", "Processing", "Error", "Deleting").
                enum:
                - Processing
                - Deleting
                - Ready
                - Error
                - Warning
                type: string
              storage:
                description: Storage signifies the storage type of DockerRegistry.
                type: string
            required:
            - served
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
