header:
  - name: header.ready
    source: status.state
    widget: Badge
    highlights:
      positive:
        - "Ready"
      informative:
        - "Processing"
      warning:
        - "Warning"
      critical:
        - "Error"
body:
  - name: details.storage.title
    widget: Panel
    visibility: $not($exists(spec.storage))
    children:
      - name: details.storage.actual.title
        source: status.storage
  - name: details.storage.title
    widget: Panel
    visibility: $exists(spec.storage)
    children:
      - name: details.storage.actual.title
        source: status.storage
      - name: details.storage.desired.title
        source: "'S3 bucket'"
        visibility: $exists(spec.storage.s3)
      - name: details.storage.desired.title
        source: "'pvc'"
        visibility: $exists(spec.storage.pvc)
      - name: details.storage.desired.title
        source: "'azure'"
        visibility: $exists(spec.storage.azure)
      - name: details.storage.desired.title
        source: "'gcs'"
        visibility: $exists(spec.storage.gcs)
      - name: details.storage.desired.title
        source: "'SAP BTP Object Store'"
        visibility: $exists(spec.storage.btpObjectStore)
      - name: details.storage.pvc
        visibility: $exists(spec.storage.pvc)
        source: status.pvc
        widget: ResourceLink
        resource:
          name: status.pvc
          namespace: $root.metadata.namespace
          kind: "'PersistentVolumeClaim'"
      # Azure
      - name: details.secret
        visibility: $exists($value)
        source: spec.storage.azure.secretName
        widget: ResourceLink
        resource:
          name: spec.storage.azure.secretName
          namespace: $root.metadata.namespace
          kind: "'Secret'"
      # s3
      - name: details.storage.bucket
        visibility: $exists($value)
        source: spec.storage.s3.bucket
      - name: details.secret
        visibility: $exists($value)
        source: spec.storage.s3.secretName
        widget: ResourceLink
        resource:
          name: spec.storage.s3.secretName
          namespace: $root.metadata.namespace
          kind: "'Secret'"
      - name: details.storage.region
        visibility: $exists($value)
        source: spec.storage.s3.region
      - name: details.storage.regionEndpoint
        visibility: $exists($value)
        source: spec.storage.s3.regionEndpoint
      - name: details.storage.encrypt
        visibility: $exists($value)
        source: spec.storage.s3.encrypt
      - name: details.storage.secure
        visibility: $exists($value)
        source: spec.storage.s3.secure
      # GCS
      - name: details.storage.bucket
        visibility: $exists($value)
        source: spec.storage.gcs.bucket
      - name: details.secret
        visibility: $exists($value)
        source: spec.storage.gcs.secretName
        widget: ResourceLink
        resource:
          name: spec.storage.gcs.secretName
          namespace: $root.metadata.namespace
          kind: "'Secret'"
      - name: details.storage.rootdirectory
        visibility: $exists($value)
        source: spec.storage.gcs.rootdirectory
      - name: details.storage.chunksize
        visibility: $exists($value)
        source: spec.storage.gcs.chunksize
      # BTP
      - name: details.secret
        visibility: $exists($value)
        source: spec.storage.btpObjectStore.secretName
        widget: ResourceLink
        resource:
          name: spec.storage.btpObjectStore.secretName
          namespace: $root.metadata.namespace
          kind: "'Secret'"
  - name: details.internalAccess
    widget: Panel
    visibility: "$exists(status.internalAccess.enabled)"
    children:
      - name: details.enabled
        visibility: "$exists($value)"
        source: status.internalAccess.enabled
      - name: details.access.pullAddress
        visibility: "$exists($value)"
        source: status.internalAccess.pullAddress
      - name: details.access.pushAddress
        visibility: "$exists($value)"
        source: status.internalAccess.pushAddress
      - name: details.secret
        visibility: "$exists($value)"
        source: status.internalAccess.secretName
        widget: ResourceLink
        resource:
          name: status.internalAccess.secretName
          namespace: $root.metadata.namespace
          kind: "'Secret'"
  - name: details.externalAccess
    widget: Panel
    visibility: "$exists(status.externalAccess.enabled)"
    children:
      - name: details.enabled
        visibility: "$exists($value)"
        source: status.externalAccess.enabled
      - name: details.access.pullAddress
        visibility: "$exists($value)"
        source: status.externalAccess.pullAddress
      - name: details.access.pushAddress
        visibility: "$exists($value)"
        source: status.externalAccess.pushAddress
      - name: details.secret
        visibility: "$exists($value)"
        source: status.externalAccess.secretName
        widget: ResourceLink
        resource:
          name: status.externalAccess.secretName
          namespace: $root.metadata.namespace
          kind: "'Secret'"

  - source: status.conditions
    widget: Table
    name: Reconciliation Conditions
    children:
      - source: type
        name: Type
      - source: status
        name: Status
        widget: Badge
        highlights:
          positive:
            - 'True'
          negative:
            - 'False'
      - source: reason
        name: Reason
      - source: message
        name: Message
      - source: '$readableTimestamp(lastTransitionTime)'
        name: Last transition
        sort: true

  - name: details.events
    widget: EventList
    filter: "$matchEvents($$, $root.kind, $root.metadata.name)"
    defaultType: information
